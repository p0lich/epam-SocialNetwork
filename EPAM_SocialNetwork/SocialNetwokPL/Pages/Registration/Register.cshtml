@using System.IO
@using Entities;
@using Dependencies;
@using EPAM.SocialNetwork.BLL.Interfaces;
@using System.Threading.Tasks

@{
    FormsAuthentication.SignOut();

    Layout = "~/Pages/Layouts/_BasicLayout.cshtml";

    ILogic logic = DependencyResolver.GetInstance().UserLogic;
    IRoleLogic roleLogic = DependencyResolver.GetInstance().RoleLogic;
}

@{
    if (IsPost)
    {
        string fileName = null;
        string savePath = @"../UsersImages/";

        if (!string.IsNullOrEmpty(Request["userImage"]))
        {
            fileName = logic.MoveUserImage(Request["userLogin"], Request["userImage"], savePath);
        }

        if (Request["userPassword"] == Request["userRepPassword"])
        {
            if (logic.IsLoginUnique(Request["userLogin"]))
            {
                DateTime? nullDate = null;
                User user = new User(
                    id: 0,
                    login: Request["userLogin"],
                    password: Request["userPassword"],
                    gender: Request.Form.Get("userGender") == "maleGender" ? "m" : "f",
                    firstName: Request["userFirstName"],
                    lastName: Request["userLastName"],
                    dateOfBirth: string.IsNullOrEmpty(Request["userDateOfBirth"]) ? nullDate : Request["userDateOfBirth"].AsDateTime(),
                    imagePath: fileName
                    );

                logic.CreateUser(user);

                User updUser = logic.GetUser(user.Login);

                if (Request["secretPassword"] == "admin")
                {
                    roleLogic.GiveRole(updUser.Id, true);
                }

                else
                {
                    roleLogic.GiveRole(updUser.Id, false);
                }

                if (string.IsNullOrEmpty(Request.Form.Get("isStay")))
                {
                    FormsAuthentication.SetAuthCookie(user.Login, false);
                }

                else
                {
                    FormsAuthentication.SetAuthCookie(user.Login, true);
                }

                Response.Redirect("~/Pages/UserPage.cshtml");
            }
        }
    }
}

<form method="post" name="registerForm" class="Login_From">
    <h1 class="Form_Title">Registration</h1>
    <div class="form-row">
        <div class="form-group Form_Element">
            <label for="inputLogin">Login</label>
            <input type="text" class="form-control" id="inputLogin" placeholder="Login" name="userLogin">
        </div>
        <div class="form-group Form_Element">
            <label for="inputPassword">Password</label>
            <input type="password" class="form-control" id="inputPassword" placeholder="Password" name="userPassword">
        </div>
        <div class="form-group Form_Element">
            <label for="inputPassword2">Repeat password</label>
            <input type="password" class="form-control" id="inputPassword2" placeholder="Repeat password" name="userRepPassword">
        </div>
        <div class="Form_Element">
            <div class="form-check">
                <input class="form-check-input" type="radio" name="userGender" id="flexRadioDefault1" value="maleGender" checked>
                <label class="form-check-label" for="flexRadioDefault1">
                    Male
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="userGender" id="flexRadioDefault2" value="feemaleGender">
                <label class="form-check-label" for="flexRadioDefault2">
                    Feemale
                </label>
            </div>
        </div>

        <p class="Form_Title pTag">Unnecessary parameters</p>

        <div class="form-group Form_Element">
            <label for="inputFirstName">First name</label>
            <input type="text" class="form-control" id="inputFirstName" placeholder="First name" name="userFirstName">
        </div>
        <div class="form-group Form_Element">
            <label for="inputLastName">Last name</label>
            <input type="text" class="form-control" id="inputLastName" placeholder="Last name" name="userLastName">
        </div>
        <div class="form-group Form_Element">
            <label for="inputDateOfBirth">Date of birth</label>
            <input type="date" class="form-control" id="inputDateOfBirth" placeholder="Date of birth" name="userDateOfBirth">
        </div>
        <div class="form-group Form_Element">
            <label for="downloadImage">Image</label>
            <input type="text" class="form-control" id="downloadImage" placeholder="Download image" name="userImage">
        </div>
        <div class="form-group Form_Element">
            <label for="inputSecretPassword">Admin passord</label>
            <!--Secret password is "admin"-->
            <input type="password" class="form-control" id="inputSecretPassword" placeholder="Become an admin" name="secretPassword">
        </div>
    </div>
    <div class="form-group Form_Element">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="gridCheck" name="isStay">
            <label class="form-check-label" for="gridCheck">
                Check me out
            </label>
        </div>
    </div>
    <button type="submit" class="btn btn-primary Form_SubmitButton">Sign up</button>
</form>

<button id="toLoginPage" class="Button_PageSwap">To login</button>

<script src="~/CustomScripts/PageRedirections.js"></script>
<script src="~/CustomScripts/ValidationScripts.js"></script>